Bootstrap is a common framework used for front end development. Its going to save a lot of time from dealing with CSS manually.
What is a framework? What makes it different from a library or a package?
Ans->	Framework has Inversion of Control		Which means the framework is defining the rules for you to follow
		      Default Behaviour
		      Extensibility
		      Non-modifiable framework code

A large part of bootstrap is understanding how to reference the documentation for your own cases.

Bootstrap v4 is a major rewrite from Bootstrap v3, but we won't delve deep enough to notice many of the differences.
The major differences are:
	Panels are being replaced by cards
	Larger default font sizes
	New grid tier(XL)
	Use of flexbox
	Moves from LESS(Leaner CSS) to SASS(Syntactically Awesome Style Sheets)

The Documentation for bootstrap is really good and is found at getbootstrap.com
There are 2 ways to use Bootstrap:
	1) Download the source code (Font files, JS files, source LESS)
	2) Use the CDN(Contect Delivery Network) where we use the <link> tag to use the files over the internet.


There are multiple templates and examples also found on the site like Jumbotrons, Navbars, Links

So its basically a bunch of predefined CSS files which we can use which have their own classes predefined.

---------------------------------------------------------------BOOTSTRAP JUMBOTRONS---------------------------------------------------------------------

A key feature of bootstrap is its default classes.

To use bootstrap, add the CDN <link> under the <head> area of the HTML file.
Note- Bootstrap has a different default font to HTML

See the bootstrap button classes at https://getbootstrap.com/docs/4.0/components/buttons/

For buttons, put the classes as class="btn btn-success btn-lg"
You can put buttons as disabled also


For jumbotron, see https://getbootstrap.com/docs/4.0/components/jumbotron/
Jumbotron is a lightweight, flexible component that can optionally extend the entire viewport to showcase key marketing messages 
on your site.
Normally the jumbotron is inside a container class.

-----------------------------------------------------------BOOTSTRAP FORMS-------------------------------------------------------------------------

Bootstrap comes with many default classes for forms.
See it at https://getbootstrap.com/docs/4.0/components/forms/ OR https://getbootstrap.com/docs/3.4/css/#forms
Something we'll do very often in bootstrap is to get everything in a container class.

One example is the class form-group which we put in the style parameter of all divs inside a form. This makes the form centered and 
look nicerwith spacing
<form>
	<div style="form-group">
		<input type="".....>
	</div>
</form>

There's another class called form-control class which rounds the corners, stretches the input accordingly, stuff like that, there's a
halo around the input box when the mouse is on it, when drop-downs are being used, bootstrap makes them look better
The form control class is used in the <input> tags in a form

We can also use form-text text-muted to write stuff like "We'll never use your info for any wrong purposes" under an input box.

Note-> See multiple class in the select tag of the form

There also classes called from-control-file, 
form-check-disabled(used when you want to show a radio button as greyed out or disabled), 
form-check-label(used for labels of radio buttons), 
form-check(used for radio buttons),
form-check-input

<legend> tag adds an underline under a heading or some 

You can find all these form examples on https://getbootstrap.com/docs/4.0/components/forms/

---------------------------------------------------------BOOTSTRAP NAVBARS----------------------------------------------------------------------------

Navars are navigational bars that we see on the top of the website.
See navbar at info https://getbootstrap.com/docs/4.0/components/navbar/
It requires JS plugins for some things like dropdowns

One class used navbar navbar-default.
There's a class like navbar-header. This is the header of the navbar where most companies have their brand. To put the brand logo in 
stylized way, put navbar-brand in the anchor tag.

For unordered lists we use the class "nav navbar-nav". These act as the menus on the navbar from the left.
For menus on the right, we use the class "nav navbar-nav navbar-right" for the unordered list tags

Note-> To fix the navbar on top of the page, when we scroll down the page, we use the class "navbar-fixed-top" with the original 
"navbar navbar-default" class.
To make the navbar dark, add the navbar-invert class

When we reduce the size of the page, we should get the hamburger (3 horizontal lines) icon, which opens to the navbar.We add a 
button with the class "navbar-toggle collapsed". Inside the button open and class tags, we have a span with the class "sr-only" and 
3 span tags with "icon-bar" class for showing 3 menus in the hamburger icon.

See the video again for proper explanation.

------------------------------------------------------------------BOOTSTRAP GRIDS------------------------------------------------------------------

The grid system for bootstrap is one of its most fundamental tools. The grid system provides the core mechanism by which using 
Bootstrap allows websites to look good across multiple devices of multiple screen sizes.

We basically split the entire screen into 12 available columns. We can use any combination of numbers which will add up to these 12 
columns. Like 2 6-width columns, or 4 3-width columns, or 3 4-width columns, or 6 2-width columns.

This grid system call will make use of the class "row", inside of a row class the following format is used col-ScreenSize-NumberOfColumns
Eg-> col-md-6. This means that we want this particular div or container to take up 6 columns (or half the screen). 

So if we have 3 divs with class="col-lg-4". In a large or extra large screen, this will show 3 different divs one next to each other.
But when we go to a medium or small screen size, the divs will be one below the other.

If below these 3 divs we have 2 divs with class="col-md-6". In a large or extra large screen, these will be displayed properly.
In a medium screen, the divs with class="col-lg-4" will be shown one below each other, but the divs with class="col-md-6" will
be shown properly one next to each other. But when the screen size becomes small, even the divs with class="col-md-6" will be shown
one below the other.

If we add 2 more divs with class="col-xs-6", the will be shown properly no matter the screen size, they will always be shown one next
to the other. Because there's no screen size smaller than xs.

If we have 4 divs with class="col-lg-3 col-sm-6" with the div names as One, Two, Three and Four.
For large screen sizes, the divs will be displayed one next to the other, each div taking up 4 columns.
For small screen sizes, One and Two are displayed next to each other, Three and Four are displayed in the next rown, next to each
other, with each taking 6 columns.
Then for extra-small screen sizes, each of them are displayed one below the other, each taking up 6 columns.

See https://getbootstrap.com/docs/3.4/examples/grid/

We can use nesting also. See https://getbootstrap.com/docs/3.4/examples/grid/ and the part about nesting.
Two columns with two nested columns
Per the documentation, nesting is easyâ€”just put a row of columns within an existing column. This gives you two columns starting at 
desktops and scaling to large desktops, with another two (equal widths) within the larger column.
At mobile device sizes, tablets and down, these columns and their nested columns will stack.